package gui;

import java.awt.BorderLayout;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.awt.image.BufferedImage;
import java.io.File;
import java.util.*;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.SpringLayout;
import javax.swing.SwingConstants;
import javax.swing.UIManager;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.filechooser.FileSystemView;
import javax.swing.table.DefaultTableModel;
import model.CustomComparator;
import model.Day;
import model.LogicModel;
import model.School;

/**
 * GUI for user interactions. Collects user parameters and runs application.
 *
 * @author Daniel Yao
 * @year 2016
 */
public class GUI extends javax.swing.JFrame implements Observer {

    private final LogicModel model;
    private int progress = 0;

    /**
     * Creates new form GUI
     *
     * @param model The LogicModel to use
     */
    public GUI(final LogicModel model) {
        this.model = model;
        this.model.addObserver(this);
        //Set the layout of the gui
        SpringLayout springLayout = new SpringLayout();
        this.getContentPane().setLayout(springLayout);
        initComponents();
        this.setLocationRelativeTo(null);
        this.getRootPane().setDefaultButton(btnRead);

        ImageIcon img = new ImageIcon("logo.png");
        this.setIconImage(img.getImage());
        Image blank = new BufferedImage(1, 1, BufferedImage.TYPE_INT_ARGB_PRE);
        dialogError.setIconImage(img.getImage());
        dialogAbout.setIconImage(img.getImage());

        spinIter.setValue(125000);
        progressBar.setStringPainted(true);
        dialogError.setLocationRelativeTo(this);
        dialogAbout.setLocationRelativeTo(this);

        WindowListener exitListener = new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                if (model.thread != null && model.thread.isAlive()) {
                    model.thread.interrupt();
                }
                System.exit(0);
            }
        };
        addWindowListener(exitListener);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        inputFileChooser = new javax.swing.JFileChooser();
        dialogError = new javax.swing.JDialog();
        lblError = new javax.swing.JLabel();
        btnOK = new javax.swing.JButton();
        outputFileChooser = new javax.swing.JFileChooser();
        dialogAbout = new javax.swing.JDialog();
        btnAboutOK = new javax.swing.JButton();
        lblAboutError = new javax.swing.JLabel();
        txtFieldInput = new javax.swing.JTextField();
        btnChooseFile = new javax.swing.JButton();
        lblTitle = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listSchools = new javax.swing.JList<>();
        lblList = new javax.swing.JLabel();
        btnRead = new javax.swing.JButton();
        lblDebug = new javax.swing.JLabel();
        btnKnap = new javax.swing.JButton();
        btnWrite = new javax.swing.JButton();
        progressBar = new javax.swing.JProgressBar();
        spinIter = new javax.swing.JSpinner();
        lblIter = new javax.swing.JLabel();
        menuBar = new javax.swing.JMenuBar();
        menuFile = new javax.swing.JMenu();
        menuExit = new javax.swing.JMenuItem();
        menuAbout = new javax.swing.JMenu();
        menuInfo = new javax.swing.JMenuItem();

        dialogError.setTitle("Warning");
        dialogError.setAlwaysOnTop(true);
        dialogError.setMinimumSize(new java.awt.Dimension(307, 159));
        dialogError.setModalityType(java.awt.Dialog.ModalityType.APPLICATION_MODAL);
        dialogError.setPreferredSize(new java.awt.Dimension(307, 159));

        lblError.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblError.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblError.setToolTipText("");

        btnOK.setText("OK");
        btnOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOKActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout dialogErrorLayout = new javax.swing.GroupLayout(dialogError.getContentPane());
        dialogError.getContentPane().setLayout(dialogErrorLayout);
        dialogErrorLayout.setHorizontalGroup(
            dialogErrorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialogErrorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(dialogErrorLayout.createSequentialGroup()
                .addGap(121, 121, 121)
                .addComponent(btnOK, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(122, Short.MAX_VALUE))
        );
        dialogErrorLayout.setVerticalGroup(
            dialogErrorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialogErrorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblError, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addComponent(btnOK)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        outputFileChooser.setDialogType(javax.swing.JFileChooser.SAVE_DIALOG);

        dialogAbout.setTitle("About");
        dialogAbout.setMinimumSize(new java.awt.Dimension(307, 169));
        dialogAbout.setPreferredSize(new java.awt.Dimension(307, 169));

        btnAboutOK.setText("OK");
        btnAboutOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAboutOKActionPerformed(evt);
            }
        });

        lblAboutError.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblAboutError.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAboutError.setText("<html><center>Developed by Daniel Yao<br/>With the Cal Poly CESAME Department and Dr. Greg Scott</center></html>");
        lblAboutError.setToolTipText("");

        javax.swing.GroupLayout dialogAboutLayout = new javax.swing.GroupLayout(dialogAbout.getContentPane());
        dialogAbout.getContentPane().setLayout(dialogAboutLayout);
        dialogAboutLayout.setHorizontalGroup(
            dialogAboutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialogAboutLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblAboutError, javax.swing.GroupLayout.DEFAULT_SIZE, 283, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(dialogAboutLayout.createSequentialGroup()
                .addGap(121, 121, 121)
                .addComponent(btnAboutOK, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(122, Short.MAX_VALUE))
        );
        dialogAboutLayout.setVerticalGroup(
            dialogAboutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialogAboutLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblAboutError, javax.swing.GroupLayout.DEFAULT_SIZE, 121, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAboutOK)
                .addContainerGap())
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Learn by Doing Lab Scheduler");
        setIconImage(null);
        setIconImages(null);
        setMinimumSize(new java.awt.Dimension(654, 535));

        btnChooseFile.setText("Choose File");
        btnChooseFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChooseFileActionPerformed(evt);
            }
        });

        lblTitle.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        lblTitle.setText("Learn by Doing Lab Scheduler");

        jScrollPane1.setViewportView(listSchools);

        lblList.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblList.setText("List of Schools:");

        btnRead.setText("Read File");
        btnRead.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReadActionPerformed(evt);
            }
        });

        lblDebug.setText("Results:");
        lblDebug.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        btnKnap.setText("Knapsack");
        btnKnap.setEnabled(false);
        btnKnap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKnapActionPerformed(evt);
            }
        });

        btnWrite.setText("Write To File");
        btnWrite.setEnabled(false);
        btnWrite.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnWriteActionPerformed(evt);
            }
        });

        progressBar.setFocusable(false);
        progressBar.setStringPainted(true);

        lblIter.setText("# of Iterations");

        menuFile.setText("File");

        menuExit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.ALT_MASK));
        menuExit.setText("Exit");
        menuExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuExitActionPerformed(evt);
            }
        });
        menuFile.add(menuExit);

        menuBar.add(menuFile);

        menuAbout.setText("About");

        menuInfo.setText("Info");
        menuInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuInfoActionPerformed(evt);
            }
        });
        menuAbout.add(menuInfo);

        menuBar.add(menuAbout);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(lblIter, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(spinIter)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnKnap, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblDebug, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 36, Short.MAX_VALUE))
                            .addComponent(progressBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtFieldInput, javax.swing.GroupLayout.PREFERRED_SIZE, 348, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblList))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnChooseFile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnRead, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(btnWrite, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblTitle)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(24, 24, 24))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFieldInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnChooseFile))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblList)
                    .addComponent(btnRead)
                    .addComponent(btnWrite))
                .addGap(4, 4, 4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(122, 122, 122)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnKnap)
                            .addComponent(spinIter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblIter))
                        .addGap(29, 29, 29)
                        .addComponent(lblDebug, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(36, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

   private void btnChooseFileActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnChooseFileActionPerformed
   {//GEN-HEADEREND:event_btnChooseFileActionPerformed
       inputFileChooser.setCurrentDirectory(new File(FileSystemView.getFileSystemView().getDefaultDirectory().getPath()));
       FileNameExtensionFilter filter = new FileNameExtensionFilter("Excel Files", "xlsx", "xls", "csv", "xlsm");
       inputFileChooser.setFileFilter(filter);
       inputFileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
       inputFileChooser.showOpenDialog(this);

       if (inputFileChooser.getSelectedFile() != null) {
           txtFieldInput.setText(inputFileChooser.getSelectedFile().getAbsolutePath());
       }
   }//GEN-LAST:event_btnChooseFileActionPerformed

   private void btnReadActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnReadActionPerformed
   {//GEN-HEADEREND:event_btnReadActionPerformed
       model.readExcelFile(txtFieldInput.getText());
       populateSchoolList();
       if (model.fileRead) {
           btnKnap.setEnabled(true);
       }
   }//GEN-LAST:event_btnReadActionPerformed

   private void btnKnapActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnKnapActionPerformed
   {//GEN-HEADEREND:event_btnKnapActionPerformed
       progress = (int) spinIter.getValue();
       btnRead.setEnabled(false);
       btnChooseFile.setEnabled(false);
       btnKnap.setEnabled(false);
       txtFieldInput.setEnabled(false);

       model.setIterations(progress);
       progressBar.setMaximum(progress);
       lblDebug.setText("<html><b>Running...</b></html>");
       model.knapsack();
   }//GEN-LAST:event_btnKnapActionPerformed

   private void btnWriteActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnWriteActionPerformed
   {//GEN-HEADEREND:event_btnWriteActionPerformed
       int userInput;
       String filename = "LBDL_" + Calendar.getInstance().get(Calendar.YEAR) + "Schedule.xlsx";
       
       outputFileChooser.setCurrentDirectory(new File(FileSystemView.getFileSystemView().getDefaultDirectory().getPath()));
       FileNameExtensionFilter filter = new FileNameExtensionFilter("Excel Files", "xlsx", "xls", "csv", "xlsm");
       outputFileChooser.setFileFilter(filter);
       outputFileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
       outputFileChooser.setSelectedFile(new File(filename));
       userInput = outputFileChooser.showSaveDialog(this);

       if (userInput == JFileChooser.APPROVE_OPTION) {
           filename = outputFileChooser.getSelectedFile().getAbsolutePath();
           if (!filename.endsWith(".xlsx"))
           {
               filename += ".xlsx";
           }
           
           model.writeExcelFile(filename);
       }
   }//GEN-LAST:event_btnWriteActionPerformed

   private void btnOKActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnOKActionPerformed
   {//GEN-HEADEREND:event_btnOKActionPerformed
       dialogError.dispose();
   }//GEN-LAST:event_btnOKActionPerformed

    private void menuExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuExitActionPerformed
        if (model.thread != null && model.thread.isAlive()) {
            model.thread.interrupt();
        }
        System.exit(0);
    }//GEN-LAST:event_menuExitActionPerformed

    private void btnAboutOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAboutOKActionPerformed
        dialogAbout.dispose();
    }//GEN-LAST:event_btnAboutOKActionPerformed

    private void menuInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuInfoActionPerformed
        dialogAbout.setVisible(true);
    }//GEN-LAST:event_menuInfoActionPerformed

    private void populateSchoolList() {
        DefaultListModel<String> listModel = new DefaultListModel<>();
        listSchools.setModel(listModel); //Clear out list
        for (School sch : model.getSchoolList()) {
            listModel.addElement(sch.getName());
        }
        listSchools.setModel(listModel);
        this.getRootPane().setDefaultButton(btnKnap);
    }

    /**
     * @param model A passed in logic model.
     */
    public static void main(final LogicModel model) {
        /* Set the Windows look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI(model).setVisible(true);
            }
        });
    }

    @Override
    public void update(Observable o, Object arg) {
        LogicModel.NotifyCmd cmd = (LogicModel.NotifyCmd) arg;

        //SWITCH over the commands 
        switch (cmd) {
            case TEXT:
                lblDebug.setText(model.notifyText);
                break;
            case LIST:
                DefaultListModel<String> listModel = new DefaultListModel<>();
                ArrayList<Day> schedule = new ArrayList<>(model.getMainSchedule().values());
                //Sort schedule by index
                Collections.sort(schedule, new CustomComparator());

                for (Day day : schedule) {
                    listModel.addElement("<html><b>" + day.toString() + "</b></html>");
                    for (School sch : day.getSchools()) {
                        listModel.addElement(sch.getName() + " " + sch.getNumStudents());
                    }
                }
                listSchools.setModel(listModel);
                progressBar.setValue(progress);
                btnKnap.setEnabled(true);
                btnWrite.setEnabled(true);
                txtFieldInput.setEnabled(true);
                break;
            case PROG:
                progressBar.setValue(model.index);
                break;
            case ERROR:
                lblError.setText(model.notifyText);
                dialogError.setVisible(true);
                break;
        }
    }

    /**
     * A small calendar for picking dates. Code was copied and modified from
     * http://www.javacodex.com/Swing/Swing-Calendar
     *
     * @author Daniel Yao, JavaCodex
     * @year 2016
     */
    class SwingCalendar extends JFrame {

        private static final long serialVersionUID = 1L;
        DefaultTableModel model;
        Calendar cal = new GregorianCalendar();
        JLabel label;

        SwingCalendar() {

            this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
            this.setTitle("Swing Calandar");
            this.setSize(300, 200);
            getContentPane().setLayout(new BorderLayout());
            this.setVisible(true);

            label = new JLabel();
            label.setHorizontalAlignment(SwingConstants.CENTER);

            JButton b1 = new JButton("<-");
            b1.addActionListener(new ActionListener() {
                public void actionPerformed(ActionEvent ae) {
                    cal.add(Calendar.MONTH, -1);
                    updateMonth();
                }
            });

            JButton b2 = new JButton("->");
            b2.addActionListener(new ActionListener() {
                public void actionPerformed(ActionEvent ae) {
                    cal.add(Calendar.MONTH, +1);
                    updateMonth();
                }
            });

            JPanel panel = new JPanel();
            panel.setLayout(new BorderLayout());
            panel.add(b1, BorderLayout.WEST);
            panel.add(label, BorderLayout.CENTER);
            panel.add(b2, BorderLayout.EAST);

            String[] columns
                    = {
                        "Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"
                    };
            model = new DefaultTableModel(null, columns);
            JTable table = new JTable(model);
            JScrollPane pane = new JScrollPane(table);

            getContentPane().add(panel, BorderLayout.NORTH);
            getContentPane().add(pane, BorderLayout.CENTER);

            this.updateMonth();

        }

        void updateMonth() {
            cal.set(Calendar.DAY_OF_MONTH, 1);

            String month = cal.getDisplayName(Calendar.MONTH, Calendar.LONG, Locale.US);
            int year = cal.get(Calendar.YEAR);
            label.setText(month + " " + year);

            int startDay = cal.get(Calendar.DAY_OF_WEEK);
            int numberOfDays = cal.getActualMaximum(Calendar.DAY_OF_MONTH);
            int weeks = cal.getActualMaximum(Calendar.WEEK_OF_MONTH);

            model.setRowCount(0);
            model.setRowCount(weeks);

            int i = startDay - 1;
            for (int day = 1; day <= numberOfDays; day++) {
                model.setValueAt(day, i / 7, i % 7);
                i = i + 1;
            }

        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAboutOK;
    private javax.swing.JButton btnChooseFile;
    private javax.swing.JButton btnKnap;
    private javax.swing.JButton btnOK;
    private javax.swing.JButton btnRead;
    private javax.swing.JButton btnWrite;
    private javax.swing.JDialog dialogAbout;
    private javax.swing.JDialog dialogError;
    private javax.swing.JFileChooser inputFileChooser;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAboutError;
    private javax.swing.JLabel lblDebug;
    private javax.swing.JLabel lblError;
    private javax.swing.JLabel lblIter;
    private javax.swing.JLabel lblList;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JList<String> listSchools;
    private javax.swing.JMenu menuAbout;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem menuExit;
    private javax.swing.JMenu menuFile;
    private javax.swing.JMenuItem menuInfo;
    private javax.swing.JFileChooser outputFileChooser;
    private javax.swing.JProgressBar progressBar;
    private javax.swing.JSpinner spinIter;
    private javax.swing.JTextField txtFieldInput;
    // End of variables declaration//GEN-END:variables
}
