package gui;

import java.awt.BorderLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.io.File;
import java.util.*;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.SpringLayout;
import javax.swing.SwingConstants;
import javax.swing.UIManager;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.filechooser.FileSystemView;
import javax.swing.table.DefaultTableModel;
import model.CustomComparator;
import model.FinalDay;
import model.LogicModel;
import model.School;

/**
 * GUI for user interactions. Collects user parameters and runs application.
 *
 * @author Daniel Yao
 * @year 2016
 */
public class GUI extends javax.swing.JFrame implements Observer {

   private final LogicModel model;
   private int progress = 0;

   /**
    * Creates new form GUI
    *
    * @param model The LogicModel to use
    */
   public GUI(final LogicModel model) {
      this.model = model;
      this.model.addObserver(this);
      //Set the layout of the gui
      SpringLayout springLayout = new SpringLayout();
      this.getContentPane().setLayout(springLayout);
      initComponents();
      this.setLocationRelativeTo(null);
      this.getRootPane().setDefaultButton(btnChooseFile);

      ImageIcon img = new ImageIcon("logo.png");
      this.setIconImage(img.getImage());

      dialogError.setIconImage(img.getImage());
      dialogAbout.setIconImage(img.getImage());
      dialogOption.setIconImage(img.getImage());
      dialogHow.setIconImage(img.getImage());

      spinIter.setValue(55000);
      progressBar.setStringPainted(true);
      dialogError.setLocationRelativeTo(this);
      dialogAbout.setLocationRelativeTo(this);
      dialogOption.setLocationRelativeTo(this);
      dialogHow.setLocationRelativeTo(this);

      WindowListener exitListener = new WindowAdapter() {
         @Override
         public void windowClosing(WindowEvent e) {
            if (model.thread != null && model.thread.isAlive())
            {
               model.thread.interrupt();
            }
            System.exit(0);
         }
      };
      addWindowListener(exitListener);
   }

   /**
    * This method is called from within the constructor to initialize the form.
    * WARNING: Do NOT modify this code. The content of this method is always
    * regenerated by the Form Editor.
    */
   @SuppressWarnings("unchecked")
   // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
   private void initComponents() {

      inputFileChooser = new javax.swing.JFileChooser();
      dialogError = new javax.swing.JDialog();
      lblError = new javax.swing.JLabel();
      btnOK = new javax.swing.JButton();
      outputFileChooser = new javax.swing.JFileChooser();
      dialogAbout = new javax.swing.JDialog();
      btnAboutOK = new javax.swing.JButton();
      lblAboutError = new javax.swing.JLabel();
      dialogOption = new javax.swing.JDialog();
      btnOptionOK = new javax.swing.JButton();
      lblOptions = new javax.swing.JLabel();
      panelOption = new javax.swing.JPanel();
      jLabel1 = new javax.swing.JLabel();
      comboStartDate = new javax.swing.JComboBox<>();
      comboEndDate = new javax.swing.JComboBox<>();
      lblstartDate = new javax.swing.JLabel();
      lblendDate = new javax.swing.JLabel();
      dialogHow = new javax.swing.JDialog();
      jScrollPane2 = new javax.swing.JScrollPane();
      textHow = new javax.swing.JTextArea();
      lblHow = new javax.swing.JLabel();
      btnHowOk = new javax.swing.JButton();
      txtFieldInput = new javax.swing.JTextField();
      lblTitle = new javax.swing.JLabel();
      jScrollPane1 = new javax.swing.JScrollPane();
      listSchools = new javax.swing.JList<>();
      lblList = new javax.swing.JLabel();
      progressBar = new javax.swing.JProgressBar();
      panelActions = new javax.swing.JPanel();
      btnWrite = new javax.swing.JButton();
      btnRead = new javax.swing.JButton();
      btnOption = new javax.swing.JButton();
      btnChooseFile = new javax.swing.JButton();
      btnKnap = new javax.swing.JButton();
      spinIter = new javax.swing.JSpinner();
      lblIter = new javax.swing.JLabel();
      lblDebug = new javax.swing.JLabel();
      lblLog = new javax.swing.JLabel();
      menuBar = new javax.swing.JMenuBar();
      menuFile = new javax.swing.JMenu();
      menuExit = new javax.swing.JMenuItem();
      menuAbout = new javax.swing.JMenu();
      menuInfo = new javax.swing.JMenuItem();
      menuHow = new javax.swing.JMenuItem();

      dialogError.setTitle("Warning");
      dialogError.setAlwaysOnTop(true);
      dialogError.setMinimumSize(new java.awt.Dimension(307, 159));
      dialogError.setModalityType(java.awt.Dialog.ModalityType.APPLICATION_MODAL);

      lblError.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
      lblError.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
      lblError.setToolTipText("");

      btnOK.setText("OK");
      btnOK.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnOKActionPerformed(evt);
         }
      });

      javax.swing.GroupLayout dialogErrorLayout = new javax.swing.GroupLayout(dialogError.getContentPane());
      dialogError.getContentPane().setLayout(dialogErrorLayout);
      dialogErrorLayout.setHorizontalGroup(
         dialogErrorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(dialogErrorLayout.createSequentialGroup()
            .addContainerGap()
            .addComponent(lblError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addContainerGap())
         .addGroup(dialogErrorLayout.createSequentialGroup()
            .addGap(121, 121, 121)
            .addComponent(btnOK, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(122, Short.MAX_VALUE))
      );
      dialogErrorLayout.setVerticalGroup(
         dialogErrorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(dialogErrorLayout.createSequentialGroup()
            .addContainerGap()
            .addComponent(lblError, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
            .addComponent(btnOK)
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
      );

      outputFileChooser.setDialogType(javax.swing.JFileChooser.SAVE_DIALOG);

      dialogAbout.setTitle("About");
      dialogAbout.setMinimumSize(new java.awt.Dimension(307, 169));

      btnAboutOK.setText("OK");
      btnAboutOK.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnAboutOKActionPerformed(evt);
         }
      });

      lblAboutError.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
      lblAboutError.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
      lblAboutError.setText("<html><center>Developed by Daniel Yao<br/>With the Cal Poly CESAME / Physics / Chemistry Departments and Dr. Greg Scott<br/><br/>2016</center></html>");
      lblAboutError.setToolTipText("");

      javax.swing.GroupLayout dialogAboutLayout = new javax.swing.GroupLayout(dialogAbout.getContentPane());
      dialogAbout.getContentPane().setLayout(dialogAboutLayout);
      dialogAboutLayout.setHorizontalGroup(
         dialogAboutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(dialogAboutLayout.createSequentialGroup()
            .addContainerGap()
            .addComponent(lblAboutError, javax.swing.GroupLayout.DEFAULT_SIZE, 283, Short.MAX_VALUE)
            .addContainerGap())
         .addGroup(dialogAboutLayout.createSequentialGroup()
            .addGap(121, 121, 121)
            .addComponent(btnAboutOK, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(122, Short.MAX_VALUE))
      );
      dialogAboutLayout.setVerticalGroup(
         dialogAboutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(dialogAboutLayout.createSequentialGroup()
            .addContainerGap()
            .addComponent(lblAboutError, javax.swing.GroupLayout.DEFAULT_SIZE, 121, Short.MAX_VALUE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(btnAboutOK)
            .addContainerGap())
      );

      dialogOption.setTitle("Options");
      dialogOption.setMinimumSize(new java.awt.Dimension(540, 425));
      dialogOption.setModal(true);

      btnOptionOK.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
      btnOptionOK.setText("OK");
      btnOptionOK.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnOptionOKActionPerformed(evt);
         }
      });

      lblOptions.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
      lblOptions.setText("File Options:");

      panelOption.setBorder(javax.swing.BorderFactory.createEtchedBorder());

      jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
      jLabel1.setText("<html><u>Set the Date Columns (e.g. <b>H to AI</b>):</u></html>");

      comboStartDate.setEditable(true);
      comboStartDate.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
      comboStartDate.setMaximumRowCount(20);
      comboStartDate.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "AA", "AB", "AC", "AD", "AE", "AF", "AG", "AH", "AI", "AJ", "AK", "AL", "AM", "AN", "AO", "AP", "AQ", "AR", "AS", "AT", "AU", "AV", "AW", "AX", "AY", "AZ" }));
      comboStartDate.setSelectedItem("H");
      comboStartDate.setToolTipText("Set to the first date column in the spreadsheet");

      comboEndDate.setEditable(true);
      comboEndDate.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
      comboEndDate.setMaximumRowCount(20);
      comboEndDate.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "AA", "AB", "AC", "AD", "AE", "AF", "AG", "AH", "AI", "AJ", "AK", "AL", "AM", "AN", "AO", "AP", "AQ", "AR", "AS", "AT", "AU", "AV", "AW", "AX", "AY", "AZ" }));
      comboEndDate.setSelectedItem("AI");
      comboEndDate.setToolTipText("Set to the last date column in the spreadsheet");

      lblstartDate.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
      lblstartDate.setText("Start Column:");

      lblendDate.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
      lblendDate.setText("End Column:");

      javax.swing.GroupLayout panelOptionLayout = new javax.swing.GroupLayout(panelOption);
      panelOption.setLayout(panelOptionLayout);
      panelOptionLayout.setHorizontalGroup(
         panelOptionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(panelOptionLayout.createSequentialGroup()
            .addGroup(panelOptionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addGroup(panelOptionLayout.createSequentialGroup()
                  .addGap(32, 32, 32)
                  .addComponent(lblstartDate)
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                  .addComponent(comboStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                  .addComponent(lblendDate)
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                  .addComponent(comboEndDate, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
               .addGroup(panelOptionLayout.createSequentialGroup()
                  .addContainerGap()
                  .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addContainerGap(366, Short.MAX_VALUE))
      );
      panelOptionLayout.setVerticalGroup(
         panelOptionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(panelOptionLayout.createSequentialGroup()
            .addGap(18, 18, 18)
            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(panelOptionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
               .addComponent(lblstartDate)
               .addComponent(comboStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addComponent(comboEndDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addComponent(lblendDate))
            .addContainerGap(238, Short.MAX_VALUE))
      );

      javax.swing.GroupLayout dialogOptionLayout = new javax.swing.GroupLayout(dialogOption.getContentPane());
      dialogOption.getContentPane().setLayout(dialogOptionLayout);
      dialogOptionLayout.setHorizontalGroup(
         dialogOptionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(dialogOptionLayout.createSequentialGroup()
            .addContainerGap()
            .addGroup(dialogOptionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addComponent(panelOption, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
               .addGroup(dialogOptionLayout.createSequentialGroup()
                  .addComponent(lblOptions, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                  .addGap(0, 0, Short.MAX_VALUE))
               .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dialogOptionLayout.createSequentialGroup()
                  .addGap(0, 0, Short.MAX_VALUE)
                  .addComponent(btnOptionOK, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addContainerGap())
      );
      dialogOptionLayout.setVerticalGroup(
         dialogOptionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(dialogOptionLayout.createSequentialGroup()
            .addGap(23, 23, 23)
            .addComponent(lblOptions, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(panelOption, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(btnOptionOK, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap())
      );

      dialogHow.setTitle("How To Use");
      dialogHow.setMinimumSize(new java.awt.Dimension(429, 340));

      textHow.setBackground(new java.awt.Color(245, 245, 245));
      textHow.setColumns(20);
      textHow.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
      textHow.setRows(5);
      textHow.setText(" 1. Pick a file using the \"Choose File\" button.\n 2. Set file parameters using the \"Set Options button.\n 3. Read in the file using the \"Read File\" button.\n     Note: File will NOT be read until options have been set.\n 4. Set number of iterations.\n     -Higher = Better results, longer time\n     -Slower = Worse results, shorter time\n 5. Run\n 6. Write to file will create an output excel file.");
      textHow.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
      textHow.setDisabledTextColor(new java.awt.Color(0, 0, 0));
      textHow.setEnabled(false);
      jScrollPane2.setViewportView(textHow);

      lblHow.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
      lblHow.setText("How To Use");

      btnHowOk.setText("OK");
      btnHowOk.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnHowOkActionPerformed(evt);
         }
      });

      javax.swing.GroupLayout dialogHowLayout = new javax.swing.GroupLayout(dialogHow.getContentPane());
      dialogHow.getContentPane().setLayout(dialogHowLayout);
      dialogHowLayout.setHorizontalGroup(
         dialogHowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(dialogHowLayout.createSequentialGroup()
            .addGroup(dialogHowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
               .addComponent(btnHowOk, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addGroup(dialogHowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                  .addGroup(dialogHowLayout.createSequentialGroup()
                     .addContainerGap()
                     .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE))
                  .addGroup(dialogHowLayout.createSequentialGroup()
                     .addContainerGap()
                     .addComponent(lblHow))))
            .addContainerGap(25, Short.MAX_VALUE))
      );
      dialogHowLayout.setVerticalGroup(
         dialogHowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(dialogHowLayout.createSequentialGroup()
            .addGap(18, 18, 18)
            .addComponent(lblHow)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(btnHowOk, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
            .addContainerGap())
      );

      setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
      setTitle("Learn by Doing Lab Scheduler");
      setIconImage(null);
      setIconImages(null);
      setMinimumSize(new java.awt.Dimension(654, 535));

      txtFieldInput.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N

      lblTitle.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
      lblTitle.setText("Learn by Doing Lab Scheduler");

      listSchools.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
      jScrollPane1.setViewportView(listSchools);

      lblList.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
      lblList.setText("List of Schools:");

      progressBar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
      progressBar.setFocusable(false);
      progressBar.setStringPainted(true);

      btnWrite.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
      btnWrite.setText("Write To File");
      btnWrite.setToolTipText("Write finished schedule to an excel file");
      btnWrite.setEnabled(false);
      btnWrite.setMaximumSize(new java.awt.Dimension(87, 29));
      btnWrite.setMinimumSize(new java.awt.Dimension(87, 29));
      btnWrite.setPreferredSize(new java.awt.Dimension(87, 34));
      btnWrite.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnWriteActionPerformed(evt);
         }
      });

      btnRead.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
      btnRead.setText("Read File");
      btnRead.setToolTipText("<html>Read in the file of schools to schedule<br/>Make sure to set Options before reading the file</html>");
      btnRead.setEnabled(false);
      btnRead.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnReadActionPerformed(evt);
         }
      });

      btnOption.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
      btnOption.setText("Set Options");
      btnOption.setToolTipText("Set the options for reading in a file");
      btnOption.setEnabled(false);
      btnOption.setMargin(new java.awt.Insets(2, 2, 2, 2));
      btnOption.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnOptionActionPerformed(evt);
         }
      });

      btnChooseFile.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
      btnChooseFile.setText("Choose File");
      btnChooseFile.setToolTipText("Choose a File to Read");
      btnChooseFile.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnChooseFileActionPerformed(evt);
         }
      });

      btnKnap.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
      btnKnap.setText("Run");
      btnKnap.setToolTipText("Generate a Schedule");
      btnKnap.setEnabled(false);
      btnKnap.setMaximumSize(new java.awt.Dimension(87, 29));
      btnKnap.setMinimumSize(new java.awt.Dimension(87, 29));
      btnKnap.setPreferredSize(new java.awt.Dimension(87, 29));
      btnKnap.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnKnapActionPerformed(evt);
         }
      });

      spinIter.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
      spinIter.setToolTipText("<html>Set the number of iterations.<br/> Higher = more students seated but longer run time</html>");
      spinIter.setEnabled(false);
      spinIter.addKeyListener(new java.awt.event.KeyAdapter() {
         public void keyPressed(java.awt.event.KeyEvent evt) {
            spinIterKeyPressed(evt);
         }
      });

      lblIter.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
      lblIter.setText("# of Iterations");

      lblDebug.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
      lblDebug.setText("Results:");
      lblDebug.setVerticalAlignment(javax.swing.SwingConstants.TOP);
      lblDebug.setBorder(javax.swing.BorderFactory.createEtchedBorder());

      lblLog.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
      lblLog.setText("Status:");
      lblLog.setBorder(javax.swing.BorderFactory.createEtchedBorder());

      javax.swing.GroupLayout panelActionsLayout = new javax.swing.GroupLayout(panelActions);
      panelActions.setLayout(panelActionsLayout);
      panelActionsLayout.setHorizontalGroup(
         panelActionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addComponent(lblDebug, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
         .addGroup(panelActionsLayout.createSequentialGroup()
            .addContainerGap()
            .addGroup(panelActionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
               .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelActionsLayout.createSequentialGroup()
                  .addGap(2, 2, 2)
                  .addComponent(lblIter, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                  .addComponent(spinIter))
               .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelActionsLayout.createSequentialGroup()
                  .addComponent(btnChooseFile)
                  .addGap(18, 18, 18)
                  .addComponent(btnOption, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGap(18, 18, 18)
            .addGroup(panelActionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addComponent(btnWrite, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addComponent(btnRead, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addComponent(btnKnap, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(0, 20, Short.MAX_VALUE))
         .addComponent(lblLog, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
      );
      panelActionsLayout.setVerticalGroup(
         panelActionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelActionsLayout.createSequentialGroup()
            .addGap(5, 5, 5)
            .addGroup(panelActionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
               .addComponent(btnChooseFile, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addComponent(btnOption, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addComponent(btnRead, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(18, 18, 18)
            .addGroup(panelActionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
               .addComponent(spinIter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addComponent(lblIter)
               .addComponent(btnKnap, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(18, 18, 18)
            .addComponent(btnWrite, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(18, 18, 18)
            .addComponent(lblDebug, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(lblLog, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap())
      );

      menuFile.setText("File");

      menuExit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.ALT_MASK));
      menuExit.setText("Exit");
      menuExit.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            menuExitActionPerformed(evt);
         }
      });
      menuFile.add(menuExit);

      menuBar.add(menuFile);

      menuAbout.setText("Info");

      menuInfo.setText("About");
      menuInfo.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            menuInfoActionPerformed(evt);
         }
      });
      menuAbout.add(menuInfo);

      menuHow.setText("How To Use");
      menuHow.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            menuHowActionPerformed(evt);
         }
      });
      menuAbout.add(menuHow);

      menuBar.add(menuAbout);

      setJMenuBar(menuBar);

      javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
      getContentPane().setLayout(layout);
      layout.setHorizontalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(layout.createSequentialGroup()
            .addGap(24, 24, 24)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addComponent(lblTitle)
               .addComponent(lblList)
               .addComponent(txtFieldInput, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addComponent(progressBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
               .addComponent(panelActions, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addContainerGap())
      );
      layout.setVerticalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(layout.createSequentialGroup()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addGroup(layout.createSequentialGroup()
                  .addGap(10, 10, 10)
                  .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                  .addComponent(txtFieldInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                  .addComponent(lblList)
                  .addGap(15, 15, 15)
                  .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE))
               .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                  .addContainerGap()
                  .addComponent(panelActions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                  .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addContainerGap(42, Short.MAX_VALUE))
      );

      pack();
   }// </editor-fold>//GEN-END:initComponents

   private void btnChooseFileActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnChooseFileActionPerformed
   {//GEN-HEADEREND:event_btnChooseFileActionPerformed
      inputFileChooser.setCurrentDirectory(new File(FileSystemView.getFileSystemView().getDefaultDirectory().getPath()));
      FileNameExtensionFilter filter = new FileNameExtensionFilter("Excel Files", "xlsx", "xls", "csv", "xlsm");
      inputFileChooser.setFileFilter(filter);
      inputFileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
      inputFileChooser.showOpenDialog(this);

      if (inputFileChooser.getSelectedFile() != null)
      {
         txtFieldInput.setText(inputFileChooser.getSelectedFile().getAbsolutePath());
         btnOption.setEnabled(true);
         this.getRootPane().setDefaultButton(btnOption);
      }
   }//GEN-LAST:event_btnChooseFileActionPerformed

   private void btnReadActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnReadActionPerformed
   {//GEN-HEADEREND:event_btnReadActionPerformed

      model.readExcelFile(txtFieldInput.getText(), comboStartDate.getSelectedItem().toString().toUpperCase(), 
              comboEndDate.getSelectedItem().toString().toUpperCase());
      populateSchoolList();
      if (model.fileRead)
      {
         btnKnap.setEnabled(true);
         btnRead.setEnabled(false);
         btnChooseFile.setEnabled(false);
         spinIter.setEnabled(true);
      }
   }//GEN-LAST:event_btnReadActionPerformed

   private void btnKnapActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnKnapActionPerformed
   {//GEN-HEADEREND:event_btnKnapActionPerformed
      progress = (int) spinIter.getValue();
      btnRead.setEnabled(false);
      btnChooseFile.setEnabled(false);
      btnKnap.setEnabled(false);
      txtFieldInput.setEnabled(false);
      spinIter.setEnabled(false);
      btnOption.setEnabled(false);
      btnWrite.setEnabled(false);

      model.setIterations(progress);
      progressBar.setMaximum(progress);
      lblLog.setText("<html>Status:   <b>Running...</b></html>");
      model.knapsack();
   }//GEN-LAST:event_btnKnapActionPerformed

   private void btnWriteActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnWriteActionPerformed
   {//GEN-HEADEREND:event_btnWriteActionPerformed
      int userInput;
      String filename = "LBDL_" + Calendar.getInstance().get(Calendar.YEAR) + "Schedule.xlsx";

      outputFileChooser.setCurrentDirectory(new File(FileSystemView.getFileSystemView().getDefaultDirectory().getPath()));
      FileNameExtensionFilter filter = new FileNameExtensionFilter("Excel Files", "xlsx", "xls", "csv", "xlsm");
      outputFileChooser.setFileFilter(filter);
      outputFileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
      outputFileChooser.setSelectedFile(new File(filename));
      userInput = outputFileChooser.showSaveDialog(this);

      if (userInput == JFileChooser.APPROVE_OPTION)
      {
         filename = outputFileChooser.getSelectedFile().getAbsolutePath();
         if (!filename.endsWith(".xlsx"))
         {
            filename += ".xlsx";
         }

         model.writeExcelFile(filename);
      }
   }//GEN-LAST:event_btnWriteActionPerformed

   private void btnOKActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnOKActionPerformed
   {//GEN-HEADEREND:event_btnOKActionPerformed
      dialogError.dispose();
   }//GEN-LAST:event_btnOKActionPerformed

    private void menuExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuExitActionPerformed
       if (model.thread != null && model.thread.isAlive())
       {
          model.thread.interrupt();
       }
       System.exit(0);
    }//GEN-LAST:event_menuExitActionPerformed

    private void btnAboutOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAboutOKActionPerformed
       dialogAbout.dispose();
    }//GEN-LAST:event_btnAboutOKActionPerformed

    private void menuInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuInfoActionPerformed
       dialogAbout.setVisible(true);
    }//GEN-LAST:event_menuInfoActionPerformed

    private void btnOptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOptionActionPerformed
       dialogOption.setVisible(true);
    }//GEN-LAST:event_btnOptionActionPerformed

    private void btnOptionOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOptionOKActionPerformed
       dialogOption.dispose();
       btnRead.setEnabled(true);
       this.getRootPane().setDefaultButton(btnRead);
    }//GEN-LAST:event_btnOptionOKActionPerformed

   private void menuHowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuHowActionPerformed
      dialogHow.setVisible(true);
      this.getRootPane().setDefaultButton(btnHowOk);
   }//GEN-LAST:event_menuHowActionPerformed

   private void btnHowOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHowOkActionPerformed
      dialogHow.dispose();
   }//GEN-LAST:event_btnHowOkActionPerformed

   private void spinIterKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_spinIterKeyPressed
      if (evt.getKeyCode() == KeyEvent.VK_ENTER)
      {
         btnKnapActionPerformed(null);
      }
   }//GEN-LAST:event_spinIterKeyPressed

   private void populateSchoolList() {
      DefaultListModel<String> listModel = new DefaultListModel<>();
      listSchools.setModel(listModel); //Clear out list
      for (School sch : model.getSchoolList())
      {
         listModel.addElement(sch.getName());
      }
      listSchools.setModel(listModel);
      this.getRootPane().setDefaultButton(btnKnap);
   }

   /**
    * @param model A passed in logic model.
    */
   public static void main(final LogicModel model) {
      /* Set the Windows look and feel */
      //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
      /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
       */
      try
      {
         UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
      } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex)
      {
         java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      }
      //</editor-fold>

      //</editor-fold>

      /* Create and display the form */
      java.awt.EventQueue.invokeLater(new Runnable() {
         public void run() {
            new GUI(model).setVisible(true);
         }
      });
   }

   @Override
   public void update(Observable o, Object arg) {
      LogicModel.NotifyCmd cmd = (LogicModel.NotifyCmd) arg;

      //SWITCH over the commands 
      switch (cmd)
      {
         case TEXT:
         {
            try
            {
               Thread.sleep(700);
            } catch (InterruptedException ex)
            {
               System.out.println(ex.toString());
            }
            lblDebug.setText("<html>Results: <br/><br/>" + model.notifyText + "</html>");
         }
         break;
         case LIST:
            DefaultListModel<String> listModel = new DefaultListModel<>();
            ArrayList<FinalDay> schedule = new ArrayList<>(model.finalSchedule);
            ArrayList<School> unscheduled = new ArrayList<>(model.finalUnscheduled);
            //Sort schedule by index
            Collections.sort(schedule, new CustomComparator());

            for (FinalDay day : schedule)
            {
               listModel.addElement("<html><b>" + day.toString() + "</b></html>");
               for (School sch : day.getSchools())
               {
                  listModel.addElement(sch.getName() + " " + sch.getNumStudents());
               }
            }

            //Add unscheduled schools
            listModel.addElement(" ");
            listModel.addElement(" ");
            listModel.addElement(" ");
            listModel.addElement("<html><b>Unscheduled Schools</b></html>");
            for (School school : unscheduled)
            {
               listModel.addElement(school.getName() + " " + school.getTotalStudents());
            }

            listSchools.setModel(listModel);
            progressBar.setValue(progress);
            btnKnap.setEnabled(true);
            btnWrite.setEnabled(true);
            spinIter.setEnabled(true);
            txtFieldInput.setEnabled(true);
            btnOption.setEnabled(true);

            lblLog.setText("Status: ");
            break;
         case PROG:
            progressBar.setValue(model.index);
            break;
         case ERROR:
            lblError.setText(model.notifyText);
            dialogError.setVisible(true);
            break;
         case LOG:
            lblLog.setText("Status: " + model.notifyText);
            break;
      }
   }

   /**
    * A small calendar for picking dates. Code was copied and modified from
    * http://www.javacodex.com/Swing/Swing-Calendar
    *
    * @author Daniel Yao, JavaCodex
    * @year 2016
    */
   class SwingCalendar extends JFrame {

      private static final long serialVersionUID = 1L;
      DefaultTableModel model;
      Calendar cal = new GregorianCalendar();
      JLabel label;

      SwingCalendar() {

         this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
         this.setTitle("Swing Calandar");
         this.setSize(300, 200);
         getContentPane().setLayout(new BorderLayout());
         this.setVisible(true);

         label = new JLabel();
         label.setHorizontalAlignment(SwingConstants.CENTER);

         JButton b1 = new JButton("<-");
         b1.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent ae) {
               cal.add(Calendar.MONTH, -1);
               updateMonth();
            }
         });

         JButton b2 = new JButton("->");
         b2.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent ae) {
               cal.add(Calendar.MONTH, +1);
               updateMonth();
            }
         });

         JPanel panel = new JPanel();
         panel.setLayout(new BorderLayout());
         panel.add(b1, BorderLayout.WEST);
         panel.add(label, BorderLayout.CENTER);
         panel.add(b2, BorderLayout.EAST);

         String[] columns
                 =
                 {
                    "Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"
                 };
         model = new DefaultTableModel(null, columns);
         JTable table = new JTable(model);
         JScrollPane pane = new JScrollPane(table);

         getContentPane().add(panel, BorderLayout.NORTH);
         getContentPane().add(pane, BorderLayout.CENTER);

         this.updateMonth();

      }

      void updateMonth() {
         cal.set(Calendar.DAY_OF_MONTH, 1);

         String month = cal.getDisplayName(Calendar.MONTH, Calendar.LONG, Locale.US);
         int year = cal.get(Calendar.YEAR);
         label.setText(month + " " + year);

         int startDay = cal.get(Calendar.DAY_OF_WEEK);
         int numberOfDays = cal.getActualMaximum(Calendar.DAY_OF_MONTH);
         int weeks = cal.getActualMaximum(Calendar.WEEK_OF_MONTH);

         model.setRowCount(0);
         model.setRowCount(weeks);

         int i = startDay - 1;
         for (int day = 1; day <= numberOfDays; day++)
         {
            model.setValueAt(day, i / 7, i % 7);
            i = i + 1;
         }

      }
   }


   // Variables declaration - do not modify//GEN-BEGIN:variables
   private javax.swing.JButton btnAboutOK;
   private javax.swing.JButton btnChooseFile;
   private javax.swing.JButton btnHowOk;
   private javax.swing.JButton btnKnap;
   private javax.swing.JButton btnOK;
   private javax.swing.JButton btnOption;
   private javax.swing.JButton btnOptionOK;
   private javax.swing.JButton btnRead;
   private javax.swing.JButton btnWrite;
   private javax.swing.JComboBox<String> comboEndDate;
   private javax.swing.JComboBox<String> comboStartDate;
   private javax.swing.JDialog dialogAbout;
   private javax.swing.JDialog dialogError;
   private javax.swing.JDialog dialogHow;
   private javax.swing.JDialog dialogOption;
   private javax.swing.JFileChooser inputFileChooser;
   private javax.swing.JLabel jLabel1;
   private javax.swing.JScrollPane jScrollPane1;
   private javax.swing.JScrollPane jScrollPane2;
   private javax.swing.JLabel lblAboutError;
   private javax.swing.JLabel lblDebug;
   private javax.swing.JLabel lblError;
   private javax.swing.JLabel lblHow;
   private javax.swing.JLabel lblIter;
   private javax.swing.JLabel lblList;
   private javax.swing.JLabel lblLog;
   private javax.swing.JLabel lblOptions;
   private javax.swing.JLabel lblTitle;
   private javax.swing.JLabel lblendDate;
   private javax.swing.JLabel lblstartDate;
   private javax.swing.JList<String> listSchools;
   private javax.swing.JMenu menuAbout;
   private javax.swing.JMenuBar menuBar;
   private javax.swing.JMenuItem menuExit;
   private javax.swing.JMenu menuFile;
   private javax.swing.JMenuItem menuHow;
   private javax.swing.JMenuItem menuInfo;
   private javax.swing.JFileChooser outputFileChooser;
   private javax.swing.JPanel panelActions;
   private javax.swing.JPanel panelOption;
   private javax.swing.JProgressBar progressBar;
   private javax.swing.JSpinner spinIter;
   private javax.swing.JTextArea textHow;
   private javax.swing.JTextField txtFieldInput;
   // End of variables declaration//GEN-END:variables
}
